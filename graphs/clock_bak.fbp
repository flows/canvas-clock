title:	Clock

DomImage(dom/image)
BodyEl(dom/querySelector)
SetCanvasHtml(dom/setHtml)
GetContext(canvas/getContext)
DrawImage(canvas/drawImage)
CanvasEl(dom/querySelector)
MathDegreesToRadians(math/degreesToRadians)
DateCreate(date/create)
DateGetSeconds(date/getSeconds)
MathMultiply(math/multiply)
CanvasTranslate(canvas/translate)
UtilWait(util/wait)
ConsoleLog(console/log)
StrokeText(canvas/strokeText)
DateCreate2(date/create)

provider ./graphs/{ns}/{name}.fbp as x

Hand(x:clock/hand)
ClockWork(x:clock/work)

SoundAlert(sound/alert)
Template(template/handlebars)

'' -> :start DomImage
'' -> :start DateCreate
"http://www.dhtmlgoodies.com/tutorials/canvas-clock/images/Clock_Face_2_by_AGF81.png" -> @src DomImage

"body" -> ^selector BodyEl

"<canvas height=\"450\" width=\"450\"></canvas>" -> html SetCanvasHtml


# Add Background Image
DomImage image -> ^element DrawImage
{
  "dx": -225, "dy": -225,
  "dw":  450, "dh":  450
} -> @in DrawImage

"canvas" -> ^selector CanvasEl
CanvasTranslate context -> context DrawImage

{ "x": 225, "y":  225 } -> @in CanvasTranslate

"Rob Halff" ->    @text StrokeText
1000        -> @timeout UtilWait
6           ->       @y MathMultiply
-40         ->       @x StrokeText
-40         ->       @y StrokeText

# correct timeing
MathDegreesToRadians out -> :start DrawImage

"morse" -> @sound SoundAlert
0.1 -> @volume SoundAlert

BodyEl selection -> element SetCanvasHtml
SetCanvasHtml element -> element CanvasEl
CanvasEl selection -> canvas GetContext
DateCreate out -> date DateGetSeconds

MathDegreesToRadians out -> angle Hand

GetContext context -> context CanvasTranslate

DateGetSeconds out -> x MathMultiply
MathMultiply out -> in MathDegreesToRadians
MathMultiply out -> msg ConsoleLog

DateGetSeconds out -> in UtilWait
UtilWait out -> :start DateCreate2
DateCreate2 out -> date DateGetSeconds
DateCreate2 out -> :start DateGetSeconds
DateCreate out -> :start DateGetSeconds

# roundtrip
#CanvasTranslate context -> context CanvasSave
DrawImage context -> context Hand

Hand context -> context DrawImage

UtilWait out -> :start SoundAlert
