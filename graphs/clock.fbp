title:	Clock

DomImage(dom/image),BodyEl(dom/querySelector),SetCanvasHtml(dom/setHtml),GetContext(canvas/getContext),DrawImage(canvas/drawImage),CanvasEl(dom/querySelector),MathDegreesToRadians(math/degreesToRadians),DateCreate(date/create),DateGetSeconds(date/getSeconds),CanvasBeginPath(canvas/beginPath),CanvasMoveTo(canvas/moveTo),CanvasLineTo(canvas/lineTo),CanvasLineTo2(canvas/lineTo),CanvasLineTo3(canvas/lineTo),CanvasLineTo4(canvas/lineTo),CanvasStroke(canvas/stroke),MathMultiply(math/multiply),Rotate(canvas/rotate),SetHandAttributes(canvas/setAttributes),CanvasFill(canvas/fill),CanvasTranslate(canvas/translate),UtilWait(util/wait),ConsoleLog(console/log),CanvasStrokeText(canvas/strokeText),CanvasSave(canvas/save)
DateCreate2(date/create),CanvasRestore(canvas/restore),SetHandAttributes2(canvas/setAttributes)

SoundAlert(sound/alert)
Template(template/handlebars)
# Whatever(express/createServer)

'' -> :start DomImage
'' -> :start DateCreate
"http://www.dhtmlgoodies.com/tutorials/canvas-clock/images/Clock_Face_2_by_AGF81.png" -> @src DomImage

"body" -> ^selector BodyEl

"<canvas height=\"450\" width=\"450\"></canvas>" -> html SetCanvasHtml


# Add Background Image
DomImage image -> ^element DrawImage
{
  "dx": -225, "dy": -225,
  "dw":  450, "dh":  450
} -> @in DrawImage

"canvas" -> ^selector CanvasEl
CanvasTranslate context -> context DrawImage

{ "x":   0, "y":    0 } -> @in CanvasMoveTo
{ "x":  -4, "y":  -10 } -> @in CanvasLineTo
{ "x":   0, "y": -150 } -> @in CanvasLineTo2
{ "x":   4, "y":  -10 } -> @in CanvasLineTo3
{ "x":   0, "y":    0 } -> @in CanvasLineTo4
{ "x": 225, "y":  225 } -> @in CanvasTranslate

"Rob Halff" ->    @text CanvasStrokeText
1000        -> @timeout UtilWait
6           ->       @y MathMultiply
-40         ->       @x CanvasStrokeText
-40         ->       @y CanvasStrokeText

 # "globalCompositeOperation": "destination-atop",
{
  "fillStyle": "blue",
  "globalAlpha": 0.8,
  "lineCap": "butt",
  "lineJoin": "miter",
  "lineWidth": 5,
  "shadowBlur": 0.8,
  "shadowColor": "green",
  "strokeStyle": "yellow",
  "textAlign": "start",
  "textBaseline": "top"
} -> @in SetHandAttributes

# correct timeing
MathDegreesToRadians out -> :start DrawImage

{
  "globalCompositeOperation": "destination-over",
  "lineCap": "butt",
  "lineJoin": "miter",
  "textAlign": "start",
  "textBaseline": "top"
} -> @in SetHandAttributes2

"morse" -> @sound SoundAlert

0.1 -> @volume SoundAlert

BodyEl selection -> element SetCanvasHtml
SetCanvasHtml element -> element CanvasEl
CanvasEl selection -> canvas GetContext
DateCreate out -> date DateGetSeconds
CanvasMoveTo context -> context CanvasLineTo
CanvasLineTo context -> context CanvasLineTo2
CanvasLineTo2 context -> context CanvasLineTo3
CanvasLineTo3 context -> context CanvasLineTo4
MathDegreesToRadians out -> angle Rotate
CanvasLineTo4 context -> context CanvasFill
CanvasFill context -> context CanvasStroke

GetContext context -> context CanvasTranslate


DateGetSeconds out -> x MathMultiply
MathMultiply out -> in MathDegreesToRadians
MathMultiply out -> msg ConsoleLog

DateGetSeconds out -> in UtilWait
UtilWait out -> :start DateCreate2
DateCreate2 out -> date DateGetSeconds
DateCreate2 out -> :start DateGetSeconds
DateCreate out -> :start DateGetSeconds
CanvasBeginPath context -> context Rotate
Rotate context -> context CanvasMoveTo
CanvasStroke context -> context CanvasRestore
CanvasSave context -> context SetHandAttributes
SetHandAttributes context -> context CanvasBeginPath

# roundtrip
#CanvasTranslate context -> context CanvasSave
DrawImage context -> context CanvasSave

# DrawImage context -> context CanvasStrokeText
#SetHandAttributes2 context -> context CanvasStrokeText

#CanvasRestore context -> context SetHandAttributes2
CanvasRestore context -> context DrawImage
#CanvasStrokeText context -> context CanvasSave

#SetHandAttributes2 context -> context DrawImage
UtilWait out -> :start SoundAlert
